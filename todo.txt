game objective
    collect the 3 (#?) keys from the random dungeons
    game timer

game framework
    overworld
        terrain generation - done
        object generation - done
        lights - done
        dungeons
            + entrance/exit
            + multiple levels
            + keys/doors
            objects
            lights - done
        enemies
            day/night enemies
        Quests
            Yeah!
    player
        bound to world - done
        bound to walls - done
        + sword swinging -> if something is in the mag + angles then it is a hit
        + side view
        + change movement to grid based?  need to see how that feels, it would also make it easier for collision detection
    camera
        clamp to world - done

textures
    make a loader that reads from spritesheets generated from texture packer
    use the filename to control category & name in this format:
        category-name-animation-frame.png
        animation and frame are optional
    need to come up with a good workflow for the texture packing
    texture up the overworld/dungeon - need to detect is around each cell, need to make stuff for each overworld/dungeon type

Fixes
    dungeon size/starting & ending location
    dungeon lights - should have better logic, not just random
        Maybe randomize this with noise somehow?
    rework the config file to remove the unnecessary stuff
    error when the first object isn't in the object.json file
    texture mapping

objects
    make objects side-view
    Make objects their own class somehow
        pass: map/cells ref, type: overworld/dungeon - tracks the config to use, if you check by biome?
        should otherwise be ok

    Put objects in dungeons
    movable, collidable, pick-upable, regrowable objects
    how do we make it so it is efficient??
        mark the index of the object in the cell itself, that way we only need to loop through the cells that are visibly on the screen instead of all objects 
        make multiple objects for this... one that is just static objects, one with moveable ones?  you only need to loop through the moveable ones


    three layers
        layer 1 - low stuff, draw before player
        layer 2, 3 = higher stuff, draw after player
    the size of the object will determine what cells on the overworld/dungeon cell maps are "occupied" / are "walls" which will control collisions
    use a sprite batch to track object positions, texture quads
        need to track index of sprite batch item

    position (top left?)
    angle
    layer (layers are different sprite batches)
    size (1, 2, 3 etc - represents how many cells it occupies)

    has light(s)

    if objects move then they move in the world and also need to update the cells they occupy


    enemies, bullets, etc also move in the world the same way but are lists of their own?

    treasures
    keys
    map pieces
    decoration/vegatation

lights
    overworld, room lights
    bullet lights

day/night cycle
    2 colours: day/night switches ebtween the two

map pieces
    in dead ends

overworld
    entry points to dungeons
    various noise maps to generate terrain, trees and stuff

dungeons
    random sizes and number of keys/doors
    end of the dungeon has a boss or something that guards the big key/treasure and lets you exit

rework graphics to be top down for world but side for all objects


https://opengameart.org/content/lots-of-free-2d-tiles-and-sprites-by-hyptosis






